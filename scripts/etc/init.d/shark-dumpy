#!/bin/sh
### BEGIN INIT INFO
# Provides:          shark-dumpy
# Required-Start:    $local_fs $network
# Required-Stop:     $local_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Shark Capture
### END INIT INFO

# Copyright(c) 2014, Citon Computer Corporation
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of CITON COMPUTER CORPORATION nor the names of
#    its contributors may be used to endorse or promote products
#    derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


# Continuous capture to ring buffer of multiple tcpdump files

# Set to your capture interface
CAPIF=eth1

# Set your capture destination path - MAKE SURE IT HAS SPACE!
CAPDEST=/cap/dumpy

# Set this to filter out traffic you don't want to record at all
DUMPCAPFILT=''

# Set the maximum per-dump file size in KB (2000000 is about 2GB)
DUMPCAPMAXSIZE=2000000

# Set the time to capture per-file in seconds
DUMPCAPROTTIME=1800

# Set the number of capture files to maintain 
DUMPCAPFILES=96

# Set the log file name
LOGFILE=/var/log/shark-dumpy.log

# Set a pid file to hold our dumpcap ID
PIDFILE=/var/run/shark-dumpy.pid

### You should not need to hack anything after this, but you are welcome
### to ;)

# Set the hostname
if [ "X${HOSTNAME}" = "X" ]; then
        HOSTNAME=`hostname`
fi

case "$1" in
	start)

                # Attempt to auto set the paths for utilities
	        DUMPCAP=`which dumpcap`
		IFCONFIG=`which ifconfig`
		ETHTOOL=`ethtool`

		if [ "X${DUMPCAP}" = "X" ]; then
		    echo "FATAL: 'dumpcap' now found in path.  Is Wireshark installed?"
		    exit 1
		fi
		
		if [ "X${IFCONFIG}" = "X" ]; then
		    # Assume it is under /sbin
		    IFCONFIG="/sbin/ifconfig"
		fi   
		if [ ! -x ${IFCONFIG} ]; then
		    echo "FATAL: Could not find ifconfig binary"
		    exit 1
		fi

		if [ "X${ETHTOOL}" = "X" ]; then
		    # Assume it is under /usr/sbin
		    ETHTOOL="/usr/sbin/ethtool"
		fi
		if [ ! -x ${ETHTOOL} ]; then
		    echo "FATAL: Could not find ethtool binary"
		    exit 1
		fi

		# Create the capture directory if it is missing
		if [ ! -d ${CAPDEST} ]; then
			mkdir -p ${CAPDEST}
		fi
		
		# Disable all TCP/IP offload features on the NIC
		echo -n "Dumpy: Killing offload on ${CAPIF}"
		${ETHTOOL} -A ${CAPIF} autoneg off rx off > ${LOGFILE} 2>&1
		
		# Configure monitor interface with no IP
		${IFCONFIG} ${CAPIF} up 0.0.0.0
		
		# Run a continous capture - Adjust params as needed
		echo ", dumping from ${CAPIF} to ${CAPDEST}/${HOSTNAME}-${CAPIF}"
		${DUMPCAP} -q -b duration:${DUMPCAPROTTIME} -b files:${DUMPCAPFILES} -s 9600 -i ${CAPIF} -w ${CAPDEST}/${HOSTNAME}-${CAPIF} -f "${DUMPCAPFILT}" >> ${LOGFILE} 2>&1 &
	
		echo $! > ${PIDFILE}
		exit 0
	;;

	stop)
		kill `cat ${PIDFILE}`
		rm -f ${PIDFILE}
	;;
        
        status)

		if [ ! -f ${PIDFILE} ]; then
		    echo "shark-dumpy is not running"
		    exit 1
		fi


	        DUMPYPID=`cat ${PIDFILE}`

		# Assumes Linux ps
	        DUMPINFO=`ps --no-headers -p ${DUMPYPID}`

		if [ "X${DUMPYINFO}" != "X" ]; then
		    echo "shark-dumpy running with PID ${DUMPYPID}"
		    echo ${DUMPINFO}
		    exit 0
		else
		    echo "shark-dumpy does not appear to be running - Removing stale PID file"
		    rm ${PIDFILE}
		    exit 1
		fi
esac

exit 0

