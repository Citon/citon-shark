#!/bin/sh
#
# Copyright(c) 2014, Citon Computer Corporation
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of CITON COMPUTER CORPORATION nor the names of
#    its contributors may be used to endorse or promote products
#    derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
##

# shark-newuser - Create a new URTBOD tunnel server user for a Shark.
#                 This runs on the tunnel server side.

EID=`id -u`

if [ "X${EID}" != "X0" ]; then
    echo "ERROR: Please rerun as root or with sudo - Elevated privilges required"
    exit 1
fi

NEWHOSTNAME=${1}

if [ X${NEWHOSTNAME} = X ]; then
    echo "ERROR: You must specify a hostname for the new remote client"
    exit 1
fi

echo "Please paste the new remote client's SSH public key below and hit ENTER"
while read -r PUBKEY; do
    if [ "X${PUBKEY}" != "X" ]; then
	if echo ${PUBKEY} | egrep '^ssh-(rsa|dss) [a-zA-Z0-9\+\/\=]+ .+\@.+' >> /dev/null; then
	    echo "Public key accepted"
	    break
	else
	    echo "WARNING: Invalid public key format - Please re-enter"
	fi
    else
     	echo "WARNING: Invalid input - Please enter a valid SSH public key"
    fi
done


echo "Adding new account fro ${NEWHOSTNAME}"
adduser --gecos "${NEWHOSTNAME} Shark,,," --disabled-password ${NEWHOSTNAME}

echo "Adding public key for ${NEWHOSTNAME} to ~${NEWHOSTNAME}/.ssh/authorized_keys"
mkdir -p /home/${NEWHOSTNAME}/.ssh
echo ${PUBKEY} >> /home/${NEWHOSTNAME}/.ssh/authorized_keys
chown -R ${NEWHOSTNAME}:${NEWHOSTNAME} /home/${NEWHOSTNAME}/.ssh
chmod 700 /home/${NEWHOSTNAME}/.ssh/authorized_keys

echo "New account setup complete"
